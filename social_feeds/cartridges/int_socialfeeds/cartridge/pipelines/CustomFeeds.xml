<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Feeds" type="job">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Workflow component execution</description>
        </text-node>
        <node-display x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="Process">
    <segment>
      <node>
        <start-node call-mode="private" name="Process" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="SetRequestLocale" pipelet-set-identifier="bc_api">
          <key-binding alias="dw.system.Site.getCurrent().defaultLocale" key="LocaleID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="export/pipelet/CreateCustomFeedsExportMgr.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentWorkflowComponentInstance" key="WorkflowComponent"/>
          <key-binding alias="CatalogExportMgr" key="CatalogExportMgr"/>
          <key-binding alias="CustomFeedsExportMgr" key="CustomFeedsExportMgr"/>
          <key-binding alias="exportCustomers" key="exportCustomers"/>
          <key-binding alias="exportCatalogs" key="exportCatalogs"/>
          <key-binding alias="DaysToExportOrders" key="DaysToExportOrders"/>
          <key-binding alias="DeltaCatalogInDays" key="DeltaCatalogInDays"/>
          <key-binding alias="GenerateDeleteFeed" key="GenerateDeleteFeed"/>
          <key-binding alias="DaysToExportCustomers" key="DaysToExportCustomers"/>
          <key-binding alias="exportOrders" key="exportOrders"/>
          <key-binding alias="ExportCustomers" key="ExportCustomers"/>
          <key-binding alias="ExportCatalogs" key="ExportCatalogs"/>
          <key-binding alias="ExportOrders" key="ExportOrders"/>
          <key-binding alias="Locales" key="Locales"/>
          <key-binding alias="GroupLocaleExport" key="GroupLocaleExport"/>
          <key-binding alias="CustomObjectIds" key="CustomObjectIds"/>
          <key-binding alias="Hostname" key="Hostname"/>
          <key-binding alias="ExcludeRestrictedProducts" key="ExcludeRestrictedProducts"/>
          <key-binding alias="LocalizedCategories" key="LocalizedCategories"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Log error" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="CurrentWorkflowComponentInstance.addMessage('An error occured during ExportMgr initialization.\n'+ScriptLog,'ERROR')" key="From_0"/>
                <key-binding alias="DoIt" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="ERROR"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Run the export" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="CustomFeedsExportMgr.runExport()" key="From_0"/>
          <key-binding alias="DoIt" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Note: Piplets need to be transactional to allow logging</description>
        </text-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="ExportPricebooks">
    <segment>
      <node>
        <start-node call-mode="private" name="ExportPricebooks" secure="false"/>
        <node-display x="4" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ExportPriceBooks" pipelet-set-identifier="bc_api">
          <key-binding alias="true" key="OverwriteExportFile"/>
          <key-binding alias="ExportFile" key="ExportFile"/>
          <key-binding alias="PriceBooks" key="PriceBooks"/>
          <key-binding alias="null" key="ErrorCode"/>
          <key-binding alias="null" key="ErrorMsg"/>
          <key-binding alias="null" key="LogFileName"/>
          <key-binding alias="null" key="Status"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ERROR"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
